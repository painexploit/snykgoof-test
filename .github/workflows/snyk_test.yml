name: Example workflow for Node using Snyk
on: push
jobs:
  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Authenticate Snyk
        run: auth ${{ secrets.SNYK_TOKEN }}
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: code test
          args: --sarif-file-output=snyk.sarif
      - name: Total Security Issues
        run: |
              length=$(cat snyk.sarif | jq '.runs[0].results | length')
              echo "RESULTS_LENGTH=$length" >> $GITHUB_ENV
      - name: High
        run: |
              high=$(cat snyk.sarif | jq '.runs[0].results | map(select(.level == "error")) | length')
              echo "RESULTS_HIGH=$high" >> $GITHUB_ENV
      - name: Medium
        run: |
              medium=$(cat snyk.sarif | jq '.runs[0].results | map(select(.level == "warning")) | length')
              echo "RESULTS_MEDIUM=$medium" >> $GITHUB_ENV
      - name: Low
        run: |
              low=$(cat snyk.sarif | jq '.runs[0].results | map(select(.level == "note")) | length')
              echo "RESULTS_LOW=$low" >> $GITHUB_ENV
      - name: Send results to Slack
        uses: rtCamp/action-slack-notify@v2
        env:
         SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
         SLACK_MESSAGE: |
          SnykGoof Vulnerabilities:
          Total Vulnerabilities: ${{ env.RESULTS_LENGTH }}
          High: ${{ env.RESULTS_HIGH }}
          Medium: ${{ env.RESULTS_MEDIUM }}
          Low: ${{ env.RESULTS_LOW }}
